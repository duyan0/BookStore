using BookStore.Core.Services;
using BookStore.Core.DTOs;
using Microsoft.Extensions.Configuration;
using System.Net;
using System.Net.Mail;
using System.Text;

namespace BookStore.Infrastructure.Services
{
    public class EmailService : IEmailService
    {
        private readonly IConfiguration _configuration;

        public EmailService(IConfiguration configuration)
        {
            _configuration = configuration;
        }

        public async Task<bool> SendPasswordResetEmailAsync(string toEmail, string newPassword, string userName)
        {
            var subject = "BookStore - M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n";
            var body = GeneratePasswordResetEmailBody(userName, newPassword);

            return await SendEmailAsync(toEmail, subject, body);
        }

        public async Task<bool> SendPasswordChangeNotificationAsync(string toEmail, string userName)
        {
            var subject = "BookStore - Th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u";
            var body = GeneratePasswordChangeNotificationBody(userName);

            return await SendEmailAsync(toEmail, subject, body);
        }

        public async Task<bool> SendEmailAsync(string toEmail, string subject, string body)
        {
            try
            {
                // Validate input parameters
                if (string.IsNullOrEmpty(toEmail) || string.IsNullOrEmpty(subject))
                {
                    Console.WriteLine("‚ùå Email validation failed: Missing required parameters");
                    return false;
                }

                // Support both appsettings.json and environment variables
                var smtpHost = Environment.GetEnvironmentVariable("EMAIL_SMTP_HOST") ??
                              _configuration["Email:SmtpHost"] ?? "smtp.gmail.com";
                var smtpPort = int.Parse(Environment.GetEnvironmentVariable("EMAIL_SMTP_PORT") ??
                                        _configuration["Email:SmtpPort"] ?? "587");
                var smtpUsername = Environment.GetEnvironmentVariable("EMAIL_USERNAME") ??
                                  _configuration["Email:Username"] ?? "crandi21112004@gmail.com";
                var smtpPassword = Environment.GetEnvironmentVariable("EMAIL_PASSWORD") ??
                                  _configuration["Email:Password"] ?? "iljt phwd atnp syis";
                var fromEmail = Environment.GetEnvironmentVariable("EMAIL_FROM_EMAIL") ??
                               _configuration["Email:FromEmail"] ?? "crandi21112004@gmail.com";
                var fromName = Environment.GetEnvironmentVariable("EMAIL_FROM_NAME") ??
                              _configuration["Email:FromName"] ?? "BookStore";

                // Validate Google App Password format (should be 16 characters without spaces)
                var isAppPassword = smtpPassword.Length == 16 && !smtpPassword.Contains(" ");
                var passwordSource = Environment.GetEnvironmentVariable("EMAIL_PASSWORD") != null ? "Environment Variable" : "Configuration File";

                // Enhanced logging for debugging
                Console.WriteLine($"üìß === PREPARING EMAIL ===");
                Console.WriteLine($"üìß To: {toEmail}");
                Console.WriteLine($"üìß Subject: {subject}");
                Console.WriteLine($"üìß From: {fromName} <{fromEmail}>");
                Console.WriteLine($"üìß SMTP: {smtpHost}:{smtpPort}");
                Console.WriteLine($"üìß Username: {smtpUsername}");
                Console.WriteLine($"üìß Password Source: {passwordSource}");
                Console.WriteLine($"üìß Password: {new string('*', smtpPassword.Length)} (length: {smtpPassword.Length})");
                Console.WriteLine($"üìß App Password Format: {(isAppPassword ? "‚úÖ Valid" : "‚ö†Ô∏è May not be App Password")}");
                Console.WriteLine($"üìß ========================");

                using var client = new SmtpClient(smtpHost, smtpPort);
                client.EnableSsl = true;
                client.UseDefaultCredentials = false;
                client.Credentials = new NetworkCredential(smtpUsername, smtpPassword);
                client.Timeout = 30000; // 30 seconds timeout

                var mailMessage = new MailMessage
                {
                    From = new MailAddress(fromEmail, fromName),
                    Subject = subject,
                    Body = body,
                    IsBodyHtml = true
                };

                mailMessage.To.Add(toEmail);

                Console.WriteLine($"üìß Connecting to SMTP server...");

                // Actually send the email
                await client.SendMailAsync(mailMessage);

                Console.WriteLine($"‚úÖ Email sent successfully to {toEmail}");
                return true;
            }
            catch (SmtpException smtpEx)
            {
                Console.WriteLine($"‚ùå SMTP Error: {smtpEx.Message}");
                Console.WriteLine($"‚ùå Status Code: {smtpEx.StatusCode}");
                Console.WriteLine($"‚ùå Inner Exception: {smtpEx.InnerException?.Message}");
                return false;
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå General Email Error: {ex.Message}");
                Console.WriteLine($"‚ùå Stack Trace: {ex.StackTrace}");
                return false;
            }
        }

        private string GeneratePasswordResetEmailBody(string userName, string newPassword)
        {
            return $@"
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <title>BookStore - M·∫≠t kh·∫©u m·ªõi</title>
    <style>
        body {{ font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; }}
        .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
        .header {{ background-color: #000; color: white; padding: 20px; text-align: center; }}
        .content {{ background-color: #f9f9f9; padding: 30px; }}
        .password-box {{ background-color: #fff; border: 2px solid #000; padding: 20px; margin: 20px 0; text-align: center; }}
        .password {{ font-size: 24px; font-weight: bold; color: #000; letter-spacing: 2px; }}
        .footer {{ background-color: #333; color: white; padding: 15px; text-align: center; font-size: 12px; }}
        .warning {{ background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; border-radius: 5px; }}
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üìö BookStore</h1>
            <h2>M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n</h2>
        </div>
        
        <div class='content'>
            <p>Xin ch√†o <strong>{userName}</strong>,</p>
            
            <p>Ch√∫ng t√¥i ƒë√£ t·∫°o m·∫≠t kh·∫©u m·ªõi cho t√†i kho·∫£n BookStore c·ªßa b·∫°n theo y√™u c·∫ßu.</p>
            
            <div class='password-box'>
                <p>M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n l√†:</p>
                <div class='password'>{newPassword}</div>
            </div>
            
            <div class='warning'>
                <strong>‚ö†Ô∏è L∆∞u √Ω b·∫£o m·∫≠t:</strong>
                <ul>
                    <li>Vui l√≤ng ƒëƒÉng nh·∫≠p v√† ƒë·ªïi m·∫≠t kh·∫©u ngay sau khi nh·∫≠n ƒë∆∞·ª£c email n√†y</li>
                    <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                    <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay</li>
                </ul>
            </div>
            
            <p>
                <a href='#' style='background-color: #000; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;'>
                    ƒêƒÉng nh·∫≠p ngay
                </a>
            </p>
            
            <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© BookStore</p>
        </div>
        
        <div class='footer'>
            <p>&copy; 2025 BookStore. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
    </div>
</body>
</html>";
        }

        private string GeneratePasswordChangeNotificationBody(string userName)
        {
            return $@"
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <title>BookStore - Th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u</title>
    <style>
        body {{ font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; }}
        .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
        .header {{ background-color: #000; color: white; padding: 20px; text-align: center; }}
        .content {{ background-color: #f9f9f9; padding: 30px; }}
        .success-box {{ background-color: #d4edda; border: 2px solid #28a745; padding: 20px; margin: 20px 0; text-align: center; border-radius: 8px; }}
        .footer {{ background-color: #333; color: white; padding: 15px; text-align: center; font-size: 12px; }}
        .security-tips {{ background-color: #e7f3ff; border: 1px solid #b3d9ff; padding: 15px; margin: 20px 0; border-radius: 5px; }}
        .icon {{ font-size: 48px; margin-bottom: 15px; }}
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üìö BookStore</h1>
            <h2>Th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u</h2>
        </div>

        <div class='content'>
            <p>Xin ch√†o <strong>{userName}</strong>,</p>

            <div class='success-box'>
                <div class='icon'>‚úÖ</div>
                <h3>M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh c√¥ng!</h3>
                <p>M·∫≠t kh·∫©u t√†i kho·∫£n BookStore c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v√†o l√∫c <strong>{DateTime.Now:dd/MM/yyyy HH:mm}</strong></p>
            </div>

            <div class='security-tips'>
                <h4>üîí L·ªùi khuy√™n b·∫£o m·∫≠t:</h4>
                <ul>
                    <li>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thay ƒë·ªïi n√†y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay l·∫≠p t·ª©c</li>
                    <li>ƒê·∫£m b·∫£o m·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n m·∫°nh v√† kh√¥ng chia s·∫ª v·ªõi ai</li>
                    <li>Th∆∞·ªùng xuy√™n thay ƒë·ªïi m·∫≠t kh·∫©u ƒë·ªÉ b·∫£o v·ªá t√†i kho·∫£n</li>
                    <li>S·ª≠ d·ª•ng m·∫≠t kh·∫©u kh√°c nhau cho c√°c t√†i kho·∫£n kh√°c nhau</li>
                </ul>
            </div>

            <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng BookStore!</p>
            <p>N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email ho·∫∑c hotline h·ªó tr·ª£.</p>
        </div>

        <div class='footer'>
            <p>&copy; 2025 BookStore. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
            <p>üìû Hotline: 1900-1234 | üìß Email: support@bookstore.com</p>
        </div>
    </div>
</body>
</html>";
        }

        #region Order Email Notifications

        public async Task<bool> SendOrderConfirmationEmailAsync(string toEmail, OrderDto order, string customerName)
        {
            var subject = $"BookStore - X√°c nh·∫≠n ƒë∆°n h√†ng #{order.Id}";
            var body = GenerateOrderConfirmationEmailBody(order, customerName);

            return await SendEmailAsync(toEmail, subject, body);
        }

        public async Task<bool> SendOrderStatusUpdateEmailAsync(string toEmail, OrderDto order, string customerName, string oldStatus, string newStatus)
        {
            var subject = $"BookStore - C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng #{order.Id}";
            var body = GenerateOrderStatusUpdateEmailBody(order, customerName, oldStatus, newStatus);

            return await SendEmailAsync(toEmail, subject, body);
        }

        public async Task<bool> SendOrderCancellationEmailAsync(string toEmail, OrderDto order, string customerName, string cancellationReason)
        {
            var subject = $"BookStore - ƒê∆°n h√†ng #{order.Id} ƒë√£ b·ªã h·ªßy";
            var body = GenerateOrderCancellationEmailBody(order, customerName, cancellationReason);

            return await SendEmailAsync(toEmail, subject, body);
        }

        #endregion

        #region Order Email Templates

        private string GenerateOrderConfirmationEmailBody(OrderDto order, string customerName)
        {
            var orderItemsHtml = new StringBuilder();
            foreach (var item in order.OrderDetails)
            {
                orderItemsHtml.AppendLine($@"
                    <tr>
                        <td style='padding: 10px; border-bottom: 1px solid #eee;'>
                            <strong>{item.BookTitle}</strong>
                        </td>
                        <td style='padding: 10px; border-bottom: 1px solid #eee; text-align: center;'>
                            {item.Quantity}
                        </td>
                        <td style='padding: 10px; border-bottom: 1px solid #eee; text-align: right;'>
                            {item.UnitPrice:N0} VND
                        </td>
                        <td style='padding: 10px; border-bottom: 1px solid #eee; text-align: right;'>
                            <strong>{item.TotalPrice:N0} VND</strong>
                        </td>
                    </tr>");
            }

            return $@"
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <title>BookStore - X√°c nh·∫≠n ƒë∆°n h√†ng</title>
    <style>
        body {{ font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }}
        .container {{ max-width: 600px; margin: 0 auto; background-color: #ffffff; }}
        .header {{ background-color: #000; color: white; padding: 30px 20px; text-align: center; }}
        .content {{ padding: 30px 20px; }}
        .order-info {{ background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #28a745; }}
        .order-table {{ width: 100%; border-collapse: collapse; margin: 20px 0; }}
        .order-table th {{ background-color: #f8f9fa; padding: 12px; text-align: left; border-bottom: 2px solid #dee2e6; }}
        .order-table td {{ padding: 10px; border-bottom: 1px solid #eee; }}
        .total-section {{ background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }}
        .total-amount {{ font-size: 24px; font-weight: bold; color: #28a745; text-align: right; }}
        .footer {{ background-color: #333; color: white; padding: 20px; text-align: center; font-size: 12px; }}
        .btn {{ background-color: #000; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 0; }}
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üìö BookStore</h1>
            <h2>X√°c nh·∫≠n ƒë∆°n h√†ng</h2>
        </div>

        <div class='content'>
            <p>Xin ch√†o <strong>{customerName}</strong>,</p>

            <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i BookStore! Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c ƒë∆°n h√†ng c·ªßa b·∫°n v√† ƒëang x·ª≠ l√Ω.</p>

            <div class='order-info'>
                <h3>üìã Th√¥ng tin ƒë∆°n h√†ng</h3>
                <p><strong>M√£ ƒë∆°n h√†ng:</strong> #{order.Id}</p>
                <p><strong>Ng√†y ƒë·∫∑t h√†ng:</strong> {order.OrderDate:dd/MM/yyyy HH:mm}</p>
                <p><strong>Tr·∫°ng th√°i:</strong> <span style='color: #ffc107; font-weight: bold;'>Ch·ªù x·ª≠ l√Ω</span></p>
                <p><strong>ƒê·ªãa ch·ªâ giao h√†ng:</strong> {order.ShippingAddress}</p>
                <p><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> {order.PaymentMethod}</p>
            </div>

            <h3>üìö Chi ti·∫øt ƒë∆°n h√†ng</h3>
            <table class='order-table'>
                <thead>
                    <tr>
                        <th>S·∫£n ph·∫©m</th>
                        <th style='text-align: center;'>S·ªë l∆∞·ª£ng</th>
                        <th style='text-align: right;'>ƒê∆°n gi√°</th>
                        <th style='text-align: right;'>Th√†nh ti·ªÅn</th>
                    </tr>
                </thead>
                <tbody>
                    {orderItemsHtml}
                </tbody>
            </table>

            <div class='total-section'>
                <div class='total-amount'>
                    T·ªïng c·ªông: {order.TotalAmount:N0} VND
                </div>
            </div>

            <div style='text-align: center; margin: 30px 0;'>
                <a href='#' class='btn'>Xem chi ti·∫øt ƒë∆°n h√†ng</a>
            </div>

            <div style='background-color: #e7f3ff; padding: 15px; border-radius: 5px; margin: 20px 0;'>
                <h4>üìû C·∫ßn h·ªó tr·ª£?</h4>
                <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o v·ªÅ ƒë∆°n h√†ng, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i:</p>
                <p>üìß Email: support@bookstore.com</p>
                <p>üì± Hotline: 1900-1234</p>
            </div>

            <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© BookStore</strong></p>
        </div>

        <div class='footer'>
            <p>&copy; 2024 BookStore. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
        </div>
    </div>
</body>
</html>";
        }

        private string GenerateOrderStatusUpdateEmailBody(OrderDto order, string customerName, string oldStatus, string newStatus)
        {
            var statusColor = newStatus switch
            {
                "Confirmed" => "#28a745",
                "Processing" => "#17a2b8",
                "Completed" => "#28a745",
                "Cancelled" => "#dc3545",
                _ => "#6c757d"
            };

            var statusText = newStatus switch
            {
                "Confirmed" => "ƒê√£ x√°c nh·∫≠n",
                "Processing" => "ƒêang x·ª≠ l√Ω",
                "Completed" => "Ho√†n th√†nh",
                "Cancelled" => "ƒê√£ h·ªßy",
                _ => newStatus
            };

            var oldStatusText = oldStatus switch
            {
                "Pending" => "Ch·ªù x·ª≠ l√Ω",
                "Confirmed" => "ƒê√£ x√°c nh·∫≠n",
                "Processing" => "ƒêang x·ª≠ l√Ω",
                "Completed" => "Ho√†n th√†nh",
                "Cancelled" => "ƒê√£ h·ªßy",
                _ => oldStatus
            };

            return $@"
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <title>BookStore - C·∫≠p nh·∫≠t ƒë∆°n h√†ng</title>
    <style>
        body {{ font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }}
        .container {{ max-width: 600px; margin: 0 auto; background-color: #ffffff; }}
        .header {{ background-color: #000; color: white; padding: 30px 20px; text-align: center; }}
        .content {{ padding: 30px 20px; }}
        .status-update {{ background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; border-left: 4px solid {statusColor}; }}
        .status-badge {{ background-color: {statusColor}; color: white; padding: 8px 16px; border-radius: 20px; font-weight: bold; display: inline-block; }}
        .order-info {{ background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }}
        .footer {{ background-color: #333; color: white; padding: 20px; text-align: center; font-size: 12px; }}
        .btn {{ background-color: #000; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 0; }}
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üìö BookStore</h1>
            <h2>C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng</h2>
        </div>

        <div class='content'>
            <p>Xin ch√†o <strong>{customerName}</strong>,</p>

            <p>ƒê∆°n h√†ng #{order.Id} c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t tr·∫°ng th√°i.</p>

            <div class='status-update'>
                <h3>üîÑ Thay ƒë·ªïi tr·∫°ng th√°i</h3>
                <p><strong>T·ª´:</strong> {oldStatusText}</p>
                <p><strong>Th√†nh:</strong> <span class='status-badge'>{statusText}</span></p>
            </div>

            <div class='order-info'>
                <h3>üìã Th√¥ng tin ƒë∆°n h√†ng</h3>
                <p><strong>M√£ ƒë∆°n h√†ng:</strong> #{order.Id}</p>
                <p><strong>Ng√†y ƒë·∫∑t h√†ng:</strong> {order.OrderDate:dd/MM/yyyy HH:mm}</p>
                <p><strong>T·ªïng ti·ªÅn:</strong> {order.TotalAmount:N0} VND</p>
                <p><strong>ƒê·ªãa ch·ªâ giao h√†ng:</strong> {order.ShippingAddress}</p>
            </div>

            <div style='text-align: center; margin: 30px 0;'>
                <a href='#' class='btn'>Xem chi ti·∫øt ƒë∆°n h√†ng</a>
            </div>

            <div style='background-color: #e7f3ff; padding: 15px; border-radius: 5px; margin: 20px 0;'>
                <h4>üìû C·∫ßn h·ªó tr·ª£?</h4>
                <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o v·ªÅ ƒë∆°n h√†ng, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i:</p>
                <p>üìß Email: support@bookstore.com</p>
                <p>üì± Hotline: 1900-1234</p>
            </div>

            <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© BookStore</strong></p>
        </div>

        <div class='footer'>
            <p>&copy; 2024 BookStore. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
        </div>
    </div>
</body>
</html>";
        }

        private string GenerateOrderCancellationEmailBody(OrderDto order, string customerName, string cancellationReason)
        {
            return $@"
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <title>BookStore - ƒê∆°n h√†ng ƒë√£ h·ªßy</title>
    <style>
        body {{ font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }}
        .container {{ max-width: 600px; margin: 0 auto; background-color: #ffffff; }}
        .header {{ background-color: #dc3545; color: white; padding: 30px 20px; text-align: center; }}
        .content {{ padding: 30px 20px; }}
        .cancellation-info {{ background-color: #f8d7da; padding: 20px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #dc3545; }}
        .order-info {{ background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }}
        .footer {{ background-color: #333; color: white; padding: 20px; text-align: center; font-size: 12px; }}
        .btn {{ background-color: #000; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 0; }}
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üìö BookStore</h1>
            <h2>ƒê∆°n h√†ng ƒë√£ b·ªã h·ªßy</h2>
        </div>

        <div class='content'>
            <p>Xin ch√†o <strong>{customerName}</strong>,</p>

            <p>Ch√∫ng t√¥i r·∫•t ti·∫øc ph·∫£i th√¥ng b√°o r·∫±ng ƒë∆°n h√†ng #{order.Id} c·ªßa b·∫°n ƒë√£ b·ªã h·ªßy.</p>

            <div class='cancellation-info'>
                <h3>‚ùå Th√¥ng tin h·ªßy ƒë∆°n</h3>
                <p><strong>L√Ω do h·ªßy:</strong> {cancellationReason}</p>
                <p><strong>Th·ªùi gian h·ªßy:</strong> {DateTime.Now:dd/MM/yyyy HH:mm}</p>
            </div>

            <div class='order-info'>
                <h3>üìã Th√¥ng tin ƒë∆°n h√†ng ƒë√£ h·ªßy</h3>
                <p><strong>M√£ ƒë∆°n h√†ng:</strong> #{order.Id}</p>
                <p><strong>Ng√†y ƒë·∫∑t h√†ng:</strong> {order.OrderDate:dd/MM/yyyy HH:mm}</p>
                <p><strong>T·ªïng ti·ªÅn:</strong> {order.TotalAmount:N0} VND</p>
                <p><strong>ƒê·ªãa ch·ªâ giao h√†ng:</strong> {order.ShippingAddress}</p>
            </div>

            <div style='background-color: #d1ecf1; padding: 15px; border-radius: 5px; margin: 20px 0;'>
                <h4>üí∞ Ho√†n ti·ªÅn</h4>
                <p>N·∫øu b·∫°n ƒë√£ thanh to√°n cho ƒë∆°n h√†ng n√†y, ch√∫ng t√¥i s·∫Ω ho√†n ti·ªÅn trong v√≤ng 3-5 ng√†y l√†m vi·ªác.</p>
                <p>S·ªë ti·ªÅn ho√†n: <strong>{order.TotalAmount:N0} VND</strong></p>
            </div>

            <div style='text-align: center; margin: 30px 0;'>
                <a href='#' class='btn'>Ti·∫øp t·ª•c mua s·∫Øm</a>
            </div>

            <div style='background-color: #e7f3ff; padding: 15px; border-radius: 5px; margin: 20px 0;'>
                <h4>üìû C·∫ßn h·ªó tr·ª£?</h4>
                <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o v·ªÅ vi·ªác h·ªßy ƒë∆°n h√†ng, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i:</p>
                <p>üìß Email: support@bookstore.com</p>
                <p>üì± Hotline: 1900-1234</p>
            </div>

            <p>Ch√∫ng t√¥i xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y v√† hy v·ªçng ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n trong t∆∞∆°ng lai.</p>
            <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© BookStore</strong></p>
        </div>

        <div class='footer'>
            <p>&copy; 2024 BookStore. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
        </div>
    </div>
</body>
</html>";
        }

        #endregion
    }
}
