@model CategoryViewModel
@{
    ViewData["Title"] = "Thêm Danh mục Mới";
}

<div class="container px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Categories" asp-action="Index">Danh mục</a></li>
        <li class="breadcrumb-item active">Thêm mới</li>
    </ol>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-header">
            <i class="fas fa-plus me-1"></i>
            Thông tin Danh mục Mới
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Tên danh mục <span class="text-danger">*</span></label>
                            <input asp-for="Name" class="form-control" placeholder="Nhập tên danh mục">
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <div class="form-text">Tên danh mục sách (ví dụ: Văn học, Khoa học, Lịch sử...)</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <!-- Preview area -->
                        <div id="namePreview" class="mb-3" style="display: none;">
                            <label class="form-label">Xem trước:</label>
                            <div class="alert alert-info">
                                <i class="fas fa-list me-2"></i>
                                <strong id="previewName"></strong>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Mô tả</label>
                            <textarea asp-for="Description" class="form-control" rows="6" placeholder="Nhập mô tả về danh mục này..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                            <div class="form-text">Mô tả chi tiết về loại sách thuộc danh mục này</div>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-12">
                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Quay lại
                            </a>
                            <div>
                                <button type="reset" class="btn btn-outline-secondary me-2">
                                    <i class="fas fa-undo"></i> Đặt lại
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save"></i> Lưu danh mục
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Preview category name
        document.getElementById('Name').addEventListener('input', function() {
            const name = this.value.trim();
            const previewContainer = document.getElementById('namePreview');
            const previewName = document.getElementById('previewName');
            
            if (name) {
                previewName.textContent = name;
                previewContainer.style.display = 'block';
            } else {
                previewContainer.style.display = 'none';
            }
        });

        // Reset form handler
        document.querySelector('button[type="reset"]').addEventListener('click', function() {
            setTimeout(function() {
                document.getElementById('namePreview').style.display = 'none';
            }, 10);
        });

        // Character counter for description
        const descriptionTextarea = document.getElementById('Description');
        const maxLength = 1000; // Set a reasonable limit
        
        // Create character counter
        const counterDiv = document.createElement('div');
        counterDiv.className = 'form-text text-end';
        counterDiv.id = 'descriptionCounter';
        descriptionTextarea.parentNode.appendChild(counterDiv);
        
        function updateCounter() {
            const currentLength = descriptionTextarea.value.length;
            counterDiv.textContent = `${currentLength}/${maxLength} ký tự`;
            
            if (currentLength > maxLength * 0.9) {
                counterDiv.className = 'form-text text-end text-warning';
            } else if (currentLength > maxLength) {
                counterDiv.className = 'form-text text-end text-danger';
            } else {
                counterDiv.className = 'form-text text-end text-muted';
            }
        }
        
        descriptionTextarea.addEventListener('input', updateCounter);
        updateCounter(); // Initialize counter
    </script>
}
