@model BookViewModel
@{
    ViewData["Title"] = "Chỉnh sửa Sách";
}

<div class="container px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Books" asp-action="Index">Sách</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Books" asp-action="Details" asp-route-id="@Model.Id">@Model.Title</a></li>
        <li class="breadcrumb-item active">Chỉnh sửa</li>
    </ol>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-header">
            <i class="fas fa-edit me-1"></i>
            Chỉnh sửa: @Model.Title
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                @Html.AntiForgeryToken()
                <input asp-for="Id" type="hidden">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
                            <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề sách">
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="AuthorId" class="form-label">Tác giả <span class="text-danger">*</span></label>
                            <select asp-for="AuthorId" class="form-select" asp-items="ViewBag.AuthorId">
                                <option value="">-- Chọn tác giả --</option>
                            </select>
                            <span asp-validation-for="AuthorId" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="CategoryId" class="form-label">Danh mục <span class="text-danger">*</span></label>
                            <select asp-for="CategoryId" class="form-select" asp-items="ViewBag.CategoryId">
                                <option value="">-- Chọn danh mục --</option>
                            </select>
                            <span asp-validation-for="CategoryId" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Price" class="form-label">Giá gốc (VNĐ) <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" placeholder="0" id="priceInput">
                                    <input asp-for="Price" type="hidden" id="priceHidden">
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Quantity" class="form-label">Số lượng <span class="text-danger">*</span></label>
                                    <input asp-for="Quantity" class="form-control" type="number" min="0" placeholder="0">
                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ISBN" class="form-label">ISBN</label>
                            <input asp-for="ISBN" class="form-control" placeholder="Nhập mã ISBN">
                            <span asp-validation-for="ISBN" class="text-danger"></span>
                        </div>

                        <!-- Discount Section -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="fas fa-percentage me-2"></i>Khuyến mãi
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="form-check mb-3">
                                    <input asp-for="IsOnSale" class="form-check-input" type="checkbox" id="isOnSaleCheck" />
                                    <label class="form-check-label" for="isOnSaleCheck">
                                        Đang khuyến mãi
                                    </label>
                                </div>

                                <div id="discountFields" style="display: none;">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="DiscountPercentage" class="form-label">Phần trăm giảm giá (%)</label>
                                                <div class="input-group">
                                                    <input asp-for="DiscountPercentage" class="form-control" placeholder="0" min="0" max="100" step="0.01" type="number" />
                                                    <span class="input-group-text">%</span>
                                                </div>
                                                <span asp-validation-for="DiscountPercentage" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="DiscountAmount" class="form-label">Số tiền giảm (VND)</label>
                                                <div class="input-group">
                                                    <input type="text" class="form-control" placeholder="0" id="discountAmountInput">
                                                    <input asp-for="DiscountAmount" type="hidden" id="discountAmountHidden">
                                                    <span class="input-group-text">₫</span>
                                                </div>
                                                <span asp-validation-for="DiscountAmount" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="SaleStartDate" class="form-label">Ngày bắt đầu khuyến mãi</label>
                                                <input asp-for="SaleStartDate" class="form-control" type="datetime-local" />
                                                <span asp-validation-for="SaleStartDate" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="SaleEndDate" class="form-label">Ngày kết thúc khuyến mãi</label>
                                                <input asp-for="SaleEndDate" class="form-control" type="datetime-local" />
                                                <span asp-validation-for="SaleEndDate" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle me-2"></i>
                                        <strong>Lưu ý:</strong> Nếu cả phần trăm và số tiền giảm đều được nhập, hệ thống sẽ áp dụng cả hai loại giảm giá.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Publisher" class="form-label">Nhà xuất bản</label>
                            <input asp-for="Publisher" class="form-control" placeholder="Nhập tên nhà xuất bản">
                            <span asp-validation-for="Publisher" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="PublicationYear" class="form-label">Năm xuất bản</label>
                            <input asp-for="PublicationYear" class="form-control" type="number" min="1900" max="@DateTime.Now.Year" placeholder="@DateTime.Now.Year">
                            <span asp-validation-for="PublicationYear" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Hình ảnh bìa sách</label>

                            <!-- Hidden field to store the image URL -->
                            <input asp-for="ImageUrl" type="hidden" id="imageUrlInput" value="@(Model.ImageUrl ?? "")">

                            <!-- Image Library section -->
                            <div class="card">
                                <div class="card-body">
                                    <!-- Current image preview -->
                                    <div id="imagePreview" @(string.IsNullOrEmpty(Model.ImageUrl) ? "style=display:none;" : "")>
                                        <img id="previewImg" src="@Model.ImageUrl" alt="Preview" class="img-thumbnail" style="max-width: 200px; max-height: 200px;">
                                        <div class="mt-2">
                                            <button type="button" class="btn btn-sm btn-danger" onclick="removeImage()">
                                                <i class="fas fa-trash"></i> Xóa ảnh
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Image Library controls -->
                                    <div id="imageLibraryControls" @(!string.IsNullOrEmpty(Model.ImageUrl) ? "style=display:none;" : "")>
                                        <button type="button" class="btn btn-primary" onclick="openImageLibrary()">
                                            <i class="fas fa-images"></i> Chọn từ thư viện ảnh
                                        </button>
                                        <div class="form-text mt-1">Chọn ảnh từ thư viện có sẵn trong hệ thống</div>
                                    </div>

                                    <!-- Image Library Modal will be inserted here -->
                                    <div id="imageLibraryModal" class="modal fade" tabindex="-1" style="display: none;">
                                        <div class="modal-dialog modal-lg">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Thư viện ảnh</h5>
                                                    <button type="button" class="btn-close" onclick="closeImageLibrary()"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <div id="imageLibraryGrid" class="row g-3">
                                                        <!-- Images will be loaded here -->
                                                    </div>
                                                    <div id="libraryLoading" class="text-center py-4">
                                                        <i class="fas fa-spinner fa-spin"></i> Đang tải ảnh...
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Status messages -->
                                    <div id="imageMessage"></div>
                                </div>
                            </div>

                            <span asp-validation-for="ImageUrl" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Mô tả</label>
                            <textarea asp-for="Description" class="form-control rich-text-editor" rows="5" placeholder="Nhập mô tả về sách..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                            <div class="form-text">Sử dụng rich text editor để định dạng nội dung</div>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-12">
                        <div class="bg-light p-3 rounded">
                            <div class="row">
                                <div class="col-md-6">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar-plus"></i> Tạo: @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                    </small>
                                </div>
                                <div class="col-md-6 text-end">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar-edit"></i> Cập nhật: @Model.UpdatedAt?.ToString("dd/MM/yyyy HH:mm")
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-12">
                        <div class="d-flex justify-content-between">
                            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Quay lại
                            </a>
                            <div>
                                <a asp-action="Index" class="btn btn-outline-secondary me-2">
                                    <i class="fas fa-list"></i> Danh sách
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save"></i> Cập nhật
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <style>
        .image-card {
            transition: transform 0.2s, box-shadow 0.2s;
            cursor: pointer;
        }

        .image-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .modal {
            background-color: rgba(0,0,0,0.5);
        }

        .modal.show {
            display: block !important;
        }
    </style>

    <script>
        let imageLibraryImages = [];

        // Open image library modal
        async function openImageLibrary() {
            console.log('Opening image library modal...');

            // Temporarily disable TinyMCE to prevent conflicts
            if (typeof tinymce !== 'undefined') {
                tinymce.activeEditor?.windowManager?.close();
            }

            const modal = document.getElementById('imageLibraryModal');

            if (modal) {
                // Use Bootstrap modal properly
                const bootstrapModal = new bootstrap.Modal(modal, {
                    backdrop: 'static',
                    keyboard: false
                });

                bootstrapModal.show();

                // Load images from API
                await loadImageLibrary();
            } else {
                console.error('Image library modal not found');
                showMessage('error', 'Không tìm thấy modal thư viện ảnh');
            }
        }

        // Close image library modal
        function closeImageLibrary() {
            console.log('Closing image library modal...');

            const modal = document.getElementById('imageLibraryModal');
            if (modal) {
                const bootstrapModal = bootstrap.Modal.getInstance(modal);
                if (bootstrapModal) {
                    bootstrapModal.hide();
                } else {
                    // Fallback
                    modal.style.display = 'none';
                    modal.classList.remove('show');
                    document.body.classList.remove('modal-open');
                    const backdrop = document.querySelector('.modal-backdrop');
                    if (backdrop) {
                        backdrop.remove();
                    }
                }
            }
        }

        // Load images from the API
        async function loadImageLibrary() {
            const grid = document.getElementById('imageLibraryGrid');
            const loading = document.getElementById('libraryLoading');

            try {
                loading.style.display = 'block';
                grid.innerHTML = '';

                const token = getJwtToken();
                if (!token) {
                    showMessage('error', 'Không tìm thấy token xác thực. Vui lòng đăng nhập lại.');
                    return;
                }

                const response = await fetch('http://localhost:5274/api/BookImage/list', {
                    method: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + token,
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error('Không thể tải danh sách ảnh');
                }

                const result = await response.json();
                imageLibraryImages = result.data || [];

                if (imageLibraryImages.length === 0) {
                    grid.innerHTML = '<div class="col-12 text-center text-muted py-4">Chưa có ảnh nào trong thư viện</div>';
                } else {
                    displayImageLibrary();
                }
            } catch (error) {
                console.error('Error loading image library:', error);
                showMessage('error', 'Lỗi khi tải thư viện ảnh: ' + error.message);
                grid.innerHTML = '<div class="col-12 text-center text-danger py-4">Lỗi khi tải ảnh</div>';
            } finally {
                loading.style.display = 'none';
            }
        }

        // Display image library grid
        function displayImageLibrary() {
            const grid = document.getElementById('imageLibraryGrid');

            grid.innerHTML = imageLibraryImages.map(image => `
                <div class="col-md-3 col-sm-4 col-6">
                    <div class="card image-card" onclick="selectLibraryImage('${image.fileName}', '${image.fullUrl}')">
                        <img src="/uploads/books/${image.fileName}" class="card-img-top" alt="${image.originalName}"
                             style="height: 150px; object-fit: cover; cursor: pointer;">
                        <div class="card-body p-2">
                            <small class="text-muted d-block text-truncate" title="${image.originalName}">
                                ${image.originalName}
                            </small>
                            <small class="text-muted">
                                ${formatFileSize(image.fileSize)}
                            </small>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Select image from library
        function selectLibraryImage(fileName, fullUrl) {
            const webImageUrl = `/uploads/books/${fileName}`;

            const imageUrlInput = document.getElementById('imageUrlInput');
            if (imageUrlInput) {
                imageUrlInput.value = webImageUrl;
            }

            showImagePreview(webImageUrl);
            hideImageLibraryControls();
            closeImageLibrary();
            showMessage('success', 'Đã chọn ảnh từ thư viện!');
        }

        // Format file size for display
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Show image preview
        function showImagePreview(src) {
            const preview = document.getElementById('imagePreview');
            const img = document.getElementById('previewImg');

            if (preview && img) {
                img.src = src;
                preview.style.display = 'block';
            }
        }

        // Remove image
        function removeImage() {
            const imageUrlInput = document.getElementById('imageUrlInput');
            const imagePreview = document.getElementById('imagePreview');

            if (imageUrlInput) imageUrlInput.value = '';
            if (imagePreview) imagePreview.style.display = 'none';

            showImageLibraryControls();
            showMessage('info', 'Đã xóa ảnh');
        }

        // Hide image library controls
        function hideImageLibraryControls() {
            const libraryControls = document.getElementById('imageLibraryControls');
            if (libraryControls) {
                libraryControls.style.display = 'none';
            }
        }

        // Show image library controls
        function showImageLibraryControls() {
            const libraryControls = document.getElementById('imageLibraryControls');
            if (libraryControls) {
                libraryControls.style.display = 'block';
            }
        }

        // Show message
        function showMessage(type, message) {
            const messageDiv = document.getElementById('imageMessage');
            const alertClass = type === 'error' ? 'alert-danger' :
                              type === 'success' ? 'alert-success' : 'alert-info';

            messageDiv.innerHTML = `<div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>`;

            // Auto hide after 5 seconds
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 5000);
        }

        // Get JWT token from session
        function getJwtToken() {
            // This should get the token from your session/localStorage
            return document.querySelector('meta[name="jwt-token"]')?.getAttribute('content') || '';
        }

        // Validate URL
        function isValidUrl(string) {
            try {
                new URL(string);
                return true;
            } catch (_) {
                return false;
            }
        }

        // VND Currency formatting for price input
        function formatVND(value) {
            // Convert to string and handle decimal values properly
            let stringValue = value.toString();

            // If it's a decimal number, parse it as float first to remove trailing zeros
            if (stringValue.includes('.')) {
                const numericValue = parseFloat(stringValue);
                stringValue = Math.floor(numericValue).toString();
            }

            // Remove all non-digits
            const cleanValue = stringValue.replace(/\D/g, '');

            if (!cleanValue) return '';

            // Add comma separators
            return cleanValue.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        }

        function parseVND(formattedValue) {
            // Remove commas and return numeric value
            return formattedValue.replace(/,/g, '');
        }

        // Initialize price formatting
        const priceInput = document.getElementById('priceInput');
        const priceHidden = document.getElementById('priceHidden');

        if (priceInput && priceHidden) {
            // Format initial value if exists
            if (priceHidden.value) {
                priceInput.value = formatVND(priceHidden.value);
            }

            // Handle input formatting
            priceInput.addEventListener('input', function() {
                const formatted = formatVND(this.value);
                this.value = formatted;
                priceHidden.value = parseVND(formatted);
            });

            // Handle discount amount formatting
            const discountAmountInput = document.getElementById('discountAmountInput');
            const discountAmountHidden = document.getElementById('discountAmountHidden');

            if (discountAmountInput && discountAmountHidden) {
                // Initialize with existing value
                if (discountAmountHidden.value) {
                    discountAmountInput.value = formatVND(discountAmountHidden.value);
                }

                // Handle input formatting
                discountAmountInput.addEventListener('input', function() {
                    const formatted = formatVND(this.value);
                    this.value = formatted;
                    discountAmountHidden.value = parseVND(formatted);
                });
            }

            // Toggle discount fields based on IsOnSale checkbox
            const isOnSaleCheck = document.getElementById('isOnSaleCheck');
            const discountFields = document.getElementById('discountFields');

            if (isOnSaleCheck && discountFields) {
                // Show/hide discount fields on page load
                if (isOnSaleCheck.checked) {
                    discountFields.style.display = 'block';
                }

                isOnSaleCheck.addEventListener('change', function(e) {
                    if (e.target.checked) {
                        discountFields.style.display = 'block';
                    } else {
                        discountFields.style.display = 'none';
                        // Clear discount values when hiding
                        const discountPercentage = document.getElementById('DiscountPercentage');
                        const saleStartDate = document.getElementById('SaleStartDate');
                        const saleEndDate = document.getElementById('SaleEndDate');

                        if (discountPercentage) discountPercentage.value = '0';
                        if (discountAmountInput) discountAmountInput.value = '';
                        if (discountAmountHidden) discountAmountHidden.value = '0';
                        if (saleStartDate) saleStartDate.value = '';
                        if (saleEndDate) saleEndDate.value = '';
                    }
                });
            }

            // Handle form submission - ensure hidden field has the numeric value
            const form = priceInput.closest('form');
            if (form) {
                form.addEventListener('submit', function() {
                    priceHidden.value = parseVND(priceInput.value);
                });
            }
        }
    </script>
}
