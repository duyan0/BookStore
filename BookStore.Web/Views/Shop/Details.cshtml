@model BookDetailsViewModel
@{
    ViewData["Title"] = Model.Book.Title;
}

<div class="container">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Shop")">Cửa hàng</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Shop", new { categoryId = Model.Book.Id })">@Model.Book.CategoryName</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Book.Title</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Book Image -->
        <div class="col-md-5 mb-0 h-100">
            <div class="card rounded-2 border-0 mb-4 shadow">
                <img src="@Model.Book.ImageUrl" class="card-img-top rounded-2" alt="@Model.Book.Title" style="height: 500px; object-fit: contain;">
            </div>
        </div>

        <!-- Book Details -->
        <div class="col-md-7">
            <div class="card border-0 shadow">
                <div class="card-body">
                    <h1 class="card-title h2 mb-3">@Model.Book.Title</h1>
                    
                    <div class="mb-3">
                        <span class="badge bg-primary fs-6">@Model.Book.CategoryName</span>
                        @if (Model.Book.Quantity <= 0)
                        {
                            <span class="badge bg-danger fs-6 ms-2">Hết hàng</span>
                        }
                        else if (Model.Book.Quantity <= 5)
                        {
                            <span class="badge bg-warning fs-6 ms-2">Sắp hết hàng</span>
                        }
                        else
                        {
                            <span class="badge bg-success fs-6 ms-2">Còn hàng</span>
                        }
                    </div>

                    <div class="row mb-4">
                        <div class="col-sm-6">
                            <p class="mb-2"><strong>Tác giả:</strong> @Model.Book.AuthorName</p>
                            <p class="mb-2"><strong>Nhà xuất bản:</strong> @Model.Book.Publisher</p>
                            <p class="mb-2"><strong>Năm xuất bản:</strong> @Model.Book.PublicationYear</p>
                        </div>
                        <div class="col-sm-6">
                            <p class="mb-2"><strong>ISBN:</strong> @Model.Book.ISBN</p>
                            <p class="mb-2"><strong>Số lượng còn lại:</strong> @Model.Book.Quantity</p>
                            <p class="mb-2"><strong>Danh mục:</strong> @Model.Book.CategoryName</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h3 class="text-danger display-5 fw-bold">@Model.Book.Price.ToString("N0") VNĐ</h3>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Book.Description))
                    {
                        <div class="mb-4">
                            <h5>Mô tả sách</h5>
                            <p class="text-muted">@Model.Book.Description</p>
                        </div>
                    }

                    <!-- Authentication-based Action Buttons -->
                    @{
                        var isLoggedIn = Context.Session.GetString("Username") != null;
                    }

                    @if (isLoggedIn)
                    {
                        <!-- Logged in users: Show Add to Cart and Buy Now -->
                        @if (Model.IsInStock)
                        {
                            <form asp-action="AddToCart" method="post" class="mb-4">
                                <input type="hidden" name="bookId" value="@Model.Book.Id" />
                                <div class="row align-items-end mb-3">
                                    <div class="col-md-3">
                                        <label class="form-label">Số lượng</label>
                                        <input type="number" name="quantity" value="@Model.Quantity" min="1" max="@Model.Book.Quantity" class="form-control" />
                                    </div>
                                    <div class="col-md-9">
                                        <button type="submit" class="btn btn-danger btn-lg w-100" @(!Model.CanAddToCart ? "disabled" : "")>
                                            <i class="fas fa-cart-plus me-2"></i>Thêm vào giỏ hàng
                                        </button>
                                    </div>
                                </div>
                            </form>

                            <!-- Buy Now Button -->
                            <div class="d-grid mb-4">
                                <button type="button" class="btn btn-success btn-lg" onclick="buyNow(@Model.Book.Id)">
                                    <i class="fas fa-bolt me-2"></i>Mua ngay
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>Sản phẩm này hiện đang hết hàng
                            </div>
                        }
                    }
                    else
                    {
                        <!-- Not logged in: Show Login button -->
                        <div class="alert alert-info mb-4">
                            <i class="fas fa-info-circle me-2"></i>
                            Vui lòng đăng nhập để mua sách này
                        </div>

                        <div class="d-grid mb-4">
                            <a href="@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })" class="btn btn-primary btn-lg">
                                <i class="fas fa-sign-in-alt me-2"></i>Đăng nhập để mua hàng
                            </a>
                        </div>

                        <div class="text-center mb-4">
                            <p class="text-muted mb-2">Chưa có tài khoản?</p>
                            <a href="@Url.Action("Register", "Account", new { returnUrl = Context.Request.Path })" class="btn btn-outline-primary">
                                <i class="fas fa-user-plus me-2"></i>Đăng ký ngay
                            </a>
                        </div>
                    }

                    <!-- Action Buttons -->
                    <div class="d-grid gap-2 d-md-flex">
                        <a href="@Url.Action("Index", "Shop")" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i>Quay lại cửa hàng
                        </a>
                        <a href="@Url.Action("Cart", "Shop")" class="btn btn-outline-primary">
                            <i class="fas fa-shopping-cart me-1"></i>Xem giỏ hàng
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Books -->
    @if (Model.RelatedBooks.Any())
    {
        <div class="row mt-5">
            <div class="col-12">
                <h3 class="mb-4">
                    <i class="fas fa-book me-2 text-primary"></i>Sách cùng danh mục
                </h3>
            </div>
        </div>

        <div class="row">
            @foreach (var book in Model.RelatedBooks)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="card h-100 border-0 shadow-sm book-card">
                        <img src="@book.ImageUrl" class="card-img-top" alt="@book.Title" style="height: ; object-fit: contain;">
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title text-truncate" title="@book.Title">@book.Title</h6>
                            <p class="card-text text-muted small">@book.AuthorName</p>
                            <p class="card-text text-danger fw-bold">@book.Price.ToString("N0") VNĐ</p>
                            <div class="mt-auto">
                                <a href="@Url.Action("Details", new { id = book.Id })" class="btn btn-outline-primary btn-sm w-100">
                                    <i class="fas fa-eye me-1"></i>Xem chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .book-card {
            transition: transform 0.2s ease-in-out;
        }
        
        .book-card:hover {
            transform: translateY(-5px);
        }
        
        .card {
            transition: box-shadow 0.2s ease-in-out;
        }
        
        .card:hover {
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }
    </style>
}

@section Scripts {
    <script>
        function buyNow(bookId) {
            // Get quantity from the form
            const quantityInput = document.querySelector('input[name="quantity"]');
            const quantity = quantityInput ? quantityInput.value : 1;

            // Show loading state
            const buyBtn = event.target;
            const originalContent = buyBtn.innerHTML;
            buyBtn.disabled = true;
            buyBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý...';

            // Add to cart first, then redirect to checkout
            fetch('@Url.Action("AddToCart", "Shop")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `bookId=${bookId}&quantity=${quantity}`
            })
            .then(response => {
                if (response.ok) {
                    // Redirect to checkout page
                    window.location.href = '@Url.Action("Checkout", "Shop")';
                } else {
                    throw new Error('Failed to add to cart');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng. Vui lòng thử lại.');

                // Restore button state
                buyBtn.disabled = false;
                buyBtn.innerHTML = originalContent;
            });
        }
    </script>
}
