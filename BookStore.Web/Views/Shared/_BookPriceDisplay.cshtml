@model BookStore.Core.DTOs.BookDto

@{
    var hasDiscount = Model.IsDiscountActive;
    var finalPrice = Model.DiscountedPrice;
    var savings = Model.TotalDiscountAmount;
    var discountPercent = Model.Price > 0 ? Math.Round((savings / Model.Price) * 100, 0) : 0;
}

<div class="book-price-container">
    @if (hasDiscount)
    {
        <!-- Discount Badge -->
        <div class="discount-badge">
            <span class="badge bg-danger">-@discountPercent%</span>
        </div>
        
        <!-- Original Price (Strikethrough) -->
        <div class="original-price">
            <span class="text-muted text-decoration-line-through">@CurrencyHelper.FormatVND(Model.Price)</span>
        </div>

        <!-- Final Discounted Price -->
        <div class="final-price">
            <span class="text-danger fw-bold fs-5">@CurrencyHelper.FormatVND(finalPrice)</span>
        </div>

        <!-- Savings Amount -->
        <div class="savings-amount">
            <small class="text-success">Tiết kiệm: @CurrencyHelper.FormatVND(savings)</small>
        </div>
    }
    else
    {
        <!-- Regular Price (No Discount) -->
        <div class="regular-price">
            <span class="text-dark fw-bold fs-5">@CurrencyHelper.FormatVND(Model.Price)</span>
        </div>
    }
</div>

<style>
.book-price-container {
    position: relative;
}

.discount-badge {
    position: absolute;
    top: -10px;
    right: -10px;
    z-index: 10;
}

.discount-badge .badge {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
}

.original-price {
    font-size: 0.9rem;
    margin-bottom: 0.25rem;
}

.final-price {
    margin-bottom: 0.25rem;
}

.savings-amount {
    font-size: 0.8rem;
}

.regular-price {
    margin-bottom: 0.5rem;
}

/* Responsive adjustments */
@@media (max-width: 576px) {
    .final-price span,
    .regular-price span {
        font-size: 1.1rem !important;
    }
    
    .discount-badge .badge {
        font-size: 0.7rem;
        padding: 0.2rem 0.4rem;
    }
}
</style>
